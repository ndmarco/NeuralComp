% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{WAIC_Winner_Take_All}
\alias{WAIC_Winner_Take_All}
\title{Calculates WAIC for the Winner-take-all Model}
\usage{
WAIC_Winner_Take_All(
  X_A,
  X_B,
  n_A,
  n_B,
  Results_A,
  Results_B,
  basis_degree,
  boundary_knots,
  internal_knots,
  end_time,
  time_inhomogeneous = TRUE,
  burnin_prop = 0.2
)
}
\arguments{
\item{X_A}{List of vectors containing the ISIs of A trials (and AB trials if testing winner-take-all (A stimulus))}

\item{X_B}{List of vectors containing the ISIs of B trials (and AB trials if testing winner-take-all (B stimulus))}

\item{n_A}{Vector containing number of spikes for each A trial (and AB trial if testing winner-take-all (A stimulus))}

\item{n_B}{Vector containing number of spikes for each B trial (and AB trial if testing winner-take-all (B stimulus))}

\item{Results_A}{List produced from running \code{Sampler_IIGPP} for A trials (and AB trials if testing winner-take-all (A stimulus))}

\item{Results_B}{List produced from running \code{Sampler_IIGPP} for B trials (and AB trials if testing winner-take-all (B stimulus))}

\item{basis_degree}{Integer indicating the degree of B-splines (3 for cubic splines)}

\item{boundary_knots}{Vector of two elements specifying the boundary knots}

\item{internal_knots}{Vector containing the desired internal knots of the B-splines}

\item{end_time}{Double containing the end of the experimental window (experimental window assumed [0, end_time])}

\item{time_inhomogeneous}{Boolean containing whether or not a time-inhomogeneous model should be used (if false then basis_degree, boundary_knots, and internal_knots can take any value of the correct type)}

\item{burnin_prop}{Double containing proportion of MCMC samples that should be discarded due to MCMC burn-in (Note burnin_prop includes warm-up iterations)}
}
\value{
List containing:
\describe{
  \item{\code{WAIC}}{Estimate of WAIC}
  \item{\code{LPPD}}{Estimate of LPPD}
  \item{\code{Effective_pars}}{Estimated Effective number of parameters}
  \item{\code{llik_A}}{Log-likelihood for A trial spike trains (and AB trials if testing winner-take-all (A stimulus))}
  \item{\code{llik_B}}{Log-likelihood for B trial spike trains (and AB trials if testing winner-take-all (B stimulus))}
}
}
\description{
This function calculates the Watanabe-Akaike information criterion (WAIC) for 
the winner-take-all model, which can be constructed via IIGPP models. This 
function will use the output from \code{Sampler_IIGPP} fit for the A, B, and 
AB data. The WAIC is defined on the deviance scale as waic = -2(lppd - p), 
where lppd is the log pointwise predictive density, and p is the effective 
number of parameters.
}
\section{Warning}{

The following must be true:
\describe{
  \item{\code{basis_degree}}{must be an integer larger than or equal to 1}
  \item{\code{internal_knots}}{must lie in the range of \code{boundary_knots}}
  \item{\code{burnin_prop}}{must be greater than or equal to 0 and less than 1}
  \item{\code{end_time}}{must be larger than 0 and all spike times must be before end_time}
}
}

\examples{
##############################
### Time-Homogeneous Model ###
##############################

## Load sample data
dat <- readRDS(system.file("test-data", "time_homogeneous_sample_dat.RDS",
               package = "NeuralComp"))

## set parameters
MCMC_iters <- 100

basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)
end_time <- 1

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

################################################
## Test Winner-take-all (Encoding Stimulus A) ##
################################################

### Create new dataset of A and AB trials together
dat_A_AB <- c(dat$X_A, dat$X_AB)
n_A_AB <- c(dat$n_A, dat$n_AB)

## Run MCMC chain for A trials and AB trials
results_A_AB <- Sampler_IIGPP(dat_A_AB, n_A_AB, MCMC_iters, basis_degree, boundary_knots,
                              internal_knots, end_time, Warm_block1 = Warm_block1,
                              Warm_block2 = Warm_block2, time_inhomogeneous = FALSE)
                       
## Run MCMC chain for B trials
results_B <- Sampler_IIGPP(dat$X_B, dat$n_B, MCMC_iters, basis_degree, boundary_knots,
                           internal_knots, end_time, Warm_block1 = Warm_block1, 
                           Warm_block2 = Warm_block2, time_inhomogeneous = FALSE)

## Calculate WAIC - Encoding stimulus A
WAIC <- WAIC_Winner_Take_All(dat_A_AB, dat$X_B, n_A_AB, dat$n_B, results_A_AB,
                             results_B, basis_degree, boundary_knots,
                             internal_knots, end_time, time_inhomogeneous = FALSE)


################################
### Time-Inhomogeneous Model ###
################################

## Load sample data
dat <- readRDS(system.file("test-data", "time_inhomogeneous_sample_dat.RDS",
               package = "NeuralComp"))

## set parameters
MCMC_iters <- 100
basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)
end_time <- 1

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

################################################
## Test Winner-take-all (Encoding Stimulus B) ##
################################################

### Create new dataset of A and AB trials together
dat_B_AB <- c(dat$X_B, dat$X_AB)
n_B_AB <- c(dat$n_B, dat$n_AB)

## Run MCMC chain for A trials 
results_A <- Sampler_IIGPP(dat$X_A, dat$n_A, MCMC_iters, basis_degree, boundary_knots,
                           internal_knots, end_time, Warm_block1 = Warm_block1,
                           Warm_block2 = Warm_block2)
                       
## Run MCMC chain for B trials and AB trials
results_B_AB <- Sampler_IIGPP(dat_B_AB, n_B_AB, MCMC_iters, basis_degree, boundary_knots,
                              internal_knots, end_time, Warm_block1 = Warm_block1, 
                              Warm_block2 = Warm_block2)

## Calculate WAIC - Encoding stimulus B
WAIC <- WAIC_Winner_Take_All(dat$X_A, dat_B_AB, dat$n_A, n_B_AB, results_A,
                             results_B_AB, basis_degree, boundary_knots,
                             internal_knots, end_time)

}
