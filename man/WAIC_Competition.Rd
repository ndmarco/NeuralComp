% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{WAIC_Competition}
\alias{WAIC_Competition}
\alias{WAIC_Competition_Marginal}
\title{Calculates WAIC for the Competition Model (Conditional)}
\usage{
WAIC_Competition(
  X_A,
  X_B,
  X_AB,
  n_A,
  n_B,
  n_AB,
  Results,
  basis_degree,
  boundary_knots,
  internal_knots,
  time_inhomogeneous = TRUE,
  method = "sampling_fast",
  burnin_prop = 0.5,
  max_time = 2,
  n_spike_evals = 25,
  n_eval = 3000L,
  n_MCMC_approx = 5L,
  n_MCMC_approx2 = 30L,
  n_MCMC_approx_fast = 100L,
  n_samples_var = 2L
)

WAIC_Competition_Marginal(
  X_A,
  X_B,
  X_AB,
  n_A,
  n_B,
  n_AB,
  Results,
  basis_degree,
  boundary_knots,
  internal_knots,
  time_inhomogeneous = TRUE,
  burnin_prop = 0.2
)
}
\arguments{
\item{X_A}{List of vectors containing the ISIs of A trials}

\item{X_B}{List of vectors containing the ISIs of B trials}

\item{X_AB}{List of vectors containing the ISIs of AB trials}

\item{n_A}{Vector containing number of spikes for each A trial}

\item{n_B}{Vector containing number of spikes for each B trial}

\item{n_AB}{Vector containing number of spikes for each AB trial}

\item{Results}{List produced from running \code{Sampler_Competition}}

\item{basis_degree}{Integer indicating the degree of B-splines (3 for cubic splines)}

\item{boundary_knots}{Vector of two elements specifying the boundary knots}

\item{internal_knots}{Vector containing the desired internal knots of the B-splines}

\item{time_inhomogeneous}{Boolean containing whether or not a time-inhomogeneous model should be used (if false then basis_degree, boundary_knots, and internal_knots can take any value of the correct type)}

\item{method}{String containing method used to calculate WAIC (sampling, sampling_fast, numerical_approx, marginal)}

\item{burnin_prop}{Double containing proportion of MCMC samples that should be discarded due to MCMC burn-in (Note burnin_prop includes warm-up iterations)}

\item{max_time}{Double containing parameter for estimating the probability of switching states used only for numerical_approx method (max_time should be large enough so that the probability of observing an ISI greater than this is negligible)}

\item{n_eval}{Integer containing parameter for estimating the probability of switching states used only for numerical_approx method (the larger the number the more computationally expensive, but more accurate)}

\item{n_MCMC_approx}{number of y_tilde samples drawn when using sampling method (denoted M_Y_tilde in the manuscript)}

\item{n_MCMC_approx2}{number of x_tilde samples drawn when using sampling method (denoted M_X_tilde in the manuscript)}
}
\value{
List containing:
\describe{
  \item{\code{WAIC}}{Estimate of WAIC}
  \item{\code{LPPD}}{Estimate of LPPD}
  \item{\code{Effective_pars}}{Estimated Effective number of parameters}
  \item{\code{llik_A}}{Log-likelihood for A trial spike trains}
  \item{\code{llik_B}}{Log-likelihood for B trial spike trains}
  \item{\code{llik_AB}}{Log-likelihood for AB trial spike trains}
}

List containing:
\describe{
  \item{\code{WAIC}}{Estimate of WAIC}
  \item{\code{LPPD}}{Estimate of LPPD}
  \item{\code{Effective_pars}}{Estimated Effective number of parameters}
  \item{\code{llik_A}}{Log-likelihood for A trial spike trains}
  \item{\code{llik_B}}{Log-likelihood for B trial spike trains}
  \item{\code{llik_AB}}{Log-likelihood for AB trial spike trains}
}
}
\description{
This function calculates the Watanabe-Akaike information criterion (WAIC) for 
the drift-diffusion competition model using the conditional likelihood. This function will use the output from
\code{Sampler_Competition}. The WAIC is defined on the deviance scale as waic = -2(lppd - p),
where lppd is the log pointwise predictive density, and p is the effective number of parameters.
The WAIC can be calculated using four different ways, as specified in the supplemental materials
of the accompanying manuscript. The conditional WAIC is akin to leave-one-spike-out cross validation (asymptotically).

This function calculates the Watanabe-Akaike information criterion (WAIC) for 
the drift-diffusion competition model using the marginal likelihood (marginalizing out the labels).
 This function will use the output from 
\code{Sampler_Competition}. The WAIC is defined on the deviance scale as waic = -2(lppd - p),
where lppd is the log pointwise predictive density, and p is the effective number of parameters.
The Marginal WAIC is akin to leave-one-spike-train-out cross validation (asymptotically).
}
\section{Warning}{

The following must be true:
\describe{
  \item{\code{basis_degree}}{must be an integer larger than or equal to 1}
  \item{\code{internal_knots}}{must lie in the range of \code{boundary_knots}}
  \item{\code{burnin_prop}}{must be greater than or equal to 0 and less than 1}
}


The following must be true:
\describe{
  \item{\code{basis_degree}}{must be an integer larger than or equal to 1}
  \item{\code{internal_knots}}{must lie in the range of \code{boundary_knots}}
  \item{\code{burnin_prop}}{must be greater than or equal to 0 and less than 1}
}
}

\examples{
##############################
### Time-Homogeneous Model ###
##############################

## Load sample data
dat <- readRDS(system.file("test-data", "time_homogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100

basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

## Run MCMC chain
results <- Sampler_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB, 
                               MCMC_iters, basis_degree, boundary_knots, internal_knots,
                               Warm_block1 = Warm_block1, Warm_block2 = Warm_block2,
                               time_inhomogeneous = FALSE)
                               
## Calculate WAIC
WAIC <- WAIC_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB,
                         results, basis_degree, boundary_knots, internal_knots,
                         time_inhomogeneous = FALSE)

################################
### Time-Inhomogeneous Model ###
################################

## Load sample data
dat <- readRDS(system.file("test-data", "time_inhomogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100
basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

## Run MCMC chain
results <- Sampler_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB, 
                               MCMC_iters, basis_degree, boundary_knots, internal_knots,
                               Warm_block1 = Warm_block1, Warm_block2 = Warm_block2)

## Calculate WAIC
WAIC <- WAIC_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB,
                       results, basis_degree, boundary_knots, internal_knots)

##############################
### Time-Homogeneous Model ###
##############################

## Load sample data
dat <- readRDS(system.file("test-data", "time_homogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100

basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

## Run MCMC chain
results <- Sampler_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB, 
                               MCMC_iters, basis_degree, boundary_knots, internal_knots,
                               Warm_block1 = Warm_block1, Warm_block2 = Warm_block2,
                               time_inhomogeneous = FALSE)
                               
## Calculate WAIC
WAIC <- WAIC_Competition_Marginal(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB,
                                  results, basis_degree, boundary_knots, internal_knots,
                                  time_inhomogeneous = FALSE)

################################
### Time-Inhomogeneous Model ###
################################

## Load sample data
dat <- readRDS(system.file("test-data", "time_inhomogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100
basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

## Run MCMC chain
results <- Sampler_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB, 
                               MCMC_iters, basis_degree, boundary_knots, internal_knots,
                               Warm_block1 = Warm_block1, Warm_block2 = Warm_block2)

## Calculate WAIC
WAIC <- WAIC_Competition_Marginal(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB,
                                  results, basis_degree, boundary_knots, internal_knots)

}
