% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Diff_LPPD}
\alias{Diff_LPPD}
\title{Calculate Difference in LPPD to Ensure that the A and B Stimuli are Sufficiently Different}
\usage{
Diff_LPPD(
  X_A,
  X_B,
  n_A,
  n_B,
  Results_A,
  Results_B,
  Results_joint,
  basis_degree,
  boundary_knots,
  internal_knots,
  end_time,
  time_inhomogeneous = TRUE,
  burnin_prop = 0.2
)
}
\arguments{
\item{X_A}{List of vectors containing the ISIs of A trials}

\item{X_B}{List of vectors containing the ISIs of B trials}

\item{n_A}{Vector containing number of spikes for each A trial}

\item{n_B}{Vector containing number of spikes for each B trial}

\item{Results_A}{List produced from running \code{Sampler_IIGPP} for A trials}

\item{Results_B}{List produced from running \code{Sampler_IIGPP} for B trials}

\item{Results_joint}{List produced from running \code{Sampler_IIGPP} for the A and B trials combined}

\item{basis_degree}{Integer indicating the degree of B-splines (3 for cubic splines)}

\item{boundary_knots}{Vector of two elements specifying the boundary knots}

\item{internal_knots}{Vector containing the desired internal knots of the B-splines}

\item{end_time}{Double containing the end of the experimental window (experimental window assumed [0, end_time])}

\item{time_inhomogeneous}{Boolean containing whether or not a time-inhomogeneous model should be used (if false then basis_degree, boundary_knots, and internal_knots can take any value of the correct type)}

\item{burnin_prop}{Double containing proportion of MCMC samples that should be discarded due to MCMC burn-in (Note burnin_prop includes warm-up iterations)}
}
\value{
Double containing the difference in LPPD between the separate models and the joint model
}
\description{
This function calculates the difference in LPPD between separate models for 
the A and B spike trains and a joint model for the A and B spike trains. The
key idea is that the separate models should be able to model the spike trains
significantly better than the joint model, indicating the two spike train 
distributions are significantly different between the A and B stimuli. The 
function will use the output from \code{Sampler_IIGPP} fit for the A, B, and 
joint data (A and B single-stimulus spike trains).
}
\section{Warning}{

The following must be true:
\describe{
  \item{\code{basis_degree}}{must be an integer larger than or equal to 1}
  \item{\code{internal_knots}}{must lie in the range of \code{boundary_knots}}
  \item{\code{burnin_prop}}{must be greater than or equal to 0 and less than 1}
  \item{\code{end_time}}{must be larger than 0 and all spike times must be before end_time}
}
}

\examples{
##############################
### Time-Homogeneous Model ###
##############################

## Load sample data
dat <- readRDS(system.file("test-data", "time_homogeneous_sample_dat.RDS",
               package = "NeuralComp"))

## set parameters
MCMC_iters <- 100

basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)
end_time <- 1

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

### Fit Separate Models

## Run MCMC chain for A trials
results_A <- Sampler_IIGPP(dat$X_A, dat$n_A, MCMC_iters, basis_degree, boundary_knots,
                           internal_knots, end_time, Warm_block1 = Warm_block1,
                           Warm_block2 = Warm_block2, time_inhomogeneous = FALSE)
                       
## Run MCMC chain for B trials
results_B<- Sampler_IIGPP(dat$X_B, dat$n_B, MCMC_iters, basis_degree, boundary_knots,
                          internal_knots, end_time, Warm_block1 = Warm_block1, 
                          Warm_block2 = Warm_block2, time_inhomogeneous = FALSE)

### Fit Joint Model

### Create new dataset of A and B trials together
dat_A_B <- c(dat$X_A, dat$X_B)
n_A_B <- c(dat$n_A, dat$n_B)

## Run MCMC chain for A trials and B trials jointly
results_A_B <- Sampler_IIGPP(dat_A_B, n_A_B, MCMC_iters, basis_degree, boundary_knots,
                             internal_knots, end_time, Warm_block1 = Warm_block1,
                             Warm_block2 = Warm_block2, time_inhomogeneous = FALSE)
                      

## Calculate Difference in LPPD
diff <- Diff_LPPD(dat$X_A, dat$X_B, dat$n_A, dat$n_B, results_A,
                  results_B, results_A_B, basis_degree, boundary_knots,
                  internal_knots, end_time, time_inhomogeneous = FALSE)


################################
### Time-Inhomogeneous Model ###
################################

## Load sample data
dat <- readRDS(system.file("test-data", "time_inhomogeneous_sample_dat.RDS",
               package = "NeuralComp"))

## set parameters
MCMC_iters <- 100
basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)
end_time <- 1

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

### Fit Separate Models

## Run MCMC chain for A trials
results_A <- Sampler_IIGPP(dat$X_A, dat$n_A, MCMC_iters, basis_degree, boundary_knots,
                           internal_knots, end_time, Warm_block1 = Warm_block1,
                           Warm_block2 = Warm_block2)
                       
## Run MCMC chain for B trials
results_B<- Sampler_IIGPP(dat$X_B, dat$n_B, MCMC_iters, basis_degree, boundary_knots,
                          internal_knots, end_time, Warm_block1 = Warm_block1, 
                          Warm_block2 = Warm_block2)

### Fit Joint Model

### Create new dataset of A and B trials together
dat_A_B <- c(dat$X_A, dat$X_B)
n_A_B <- c(dat$n_A, dat$n_B)

## Run MCMC chain for A trials and B trials jointly
results_A_B <- Sampler_IIGPP(dat_A_B, n_A_B, MCMC_iters, basis_degree, boundary_knots,
                             internal_knots, end_time, Warm_block1 = Warm_block1,
                             Warm_block2 = Warm_block2)
                      

## Calculate Difference in LPPD
diff <- Diff_LPPD(dat$X_A, dat$X_B, dat$n_A, dat$n_B, results_A,
                  results_B, results_A_B, basis_degree, boundary_knots,
                  internal_knots, end_time)

}
