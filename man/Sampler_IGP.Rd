% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Sampler_IGP}
\alias{Sampler_IGP}
\title{Sampler for Inverse Gamma Renewal Process}
\usage{
Sampler_IGP(
  X,
  n,
  MCMC_iters,
  basis_degree,
  boundary_knots,
  internal_knots,
  time_inhomogeneous = TRUE,
  Warm_block1 = 500L,
  Warm_block2 = 3000L,
  Leapfrog_steps = 10L,
  I_mean = 40,
  I_shape = 1,
  sigma_mean = 6.32,
  sigma_shape = 1,
  step_size_theta = 0.001,
  step_size_FR = 0.001,
  alpha = 1,
  beta = 0.005,
  Mass_adaption_block = 500L,
  M_proposal = 10L
)
}
\arguments{
\item{X}{List of vectors containing the ISIs the trials}

\item{n}{Vector containing number of spikes for the trials}

\item{MCMC_iters}{Integer containing the number of MCMC_iterations excluding warm up blocks}

\item{basis_degree}{Integer indicating the degree of B-splines (3 for cubic splines)}

\item{boundary_knots}{Vector of two elements specifying the boundary knots}

\item{internal_knots}{Vector containing the desired internal knots of the B-splines}

\item{time_inhomogeneous}{Boolean containing whether or not a time-inhomogeneous model should be used (if false then basis_degree, boundary_knots, and internal_knots can take any value of the correct type)}

\item{Warm_block1}{Integer containing number of iterations to adapt the leapfrog step size under identity mass matrices}

\item{Warm_block2}{Integer containing number of iterations to adapt the mass matrices, leapfrog step size, and delta sampling parameters}

\item{Leapfrog_steps}{Integer containing number of leapfrog steps per HMC step}

\item{I_mean}{Double containing the value for the mean parameter of IG prior on I}

\item{I_shape}{Double containing the value for the shape parameter of IG prior on I}

\item{sigma_mean}{Double containing the value for the mean parameter of IG prior on sigma}

\item{sigma_shape}{Double containing the value for the shape parameter of IG prior on sigma}

\item{step_size_theta}{Double containing initial leapfrog step size for theta parameters}

\item{step_size_FR}{Double containing initial leapfrog step size for time-inhomogeneous firing rate parameters}

\item{alpha}{Double containing the value for the shape parameter of the inverse gamma prior on I_A_sigma squared and I_B_sigma squared}

\item{beta}{Double containing the value for the scale parameter of the inverse gamma prior on I_A_sigma squared and I_B_sigma squared}

\item{M_proposal}{Integer containing the number of deltas proposed when sampling delta}

\item{Mass_adaptation_block}{Integer containing how often the Mass Matrix should be updated in Warm_block2}
}
\value{
List containing:
\describe{
  \item{\code{theta}}{Matrix of samples of the theta parameters (I, sigma) where each row is an MCMC sample}
  \item{\code{basis_coef}}{Matrix containing MCMC samples of the coefficients of the B-splines for the inhomogeneous process (if time-inhomogeneous)}
  \item{\code{I_sigma_sq}}{Vector of MCMC samples of I_sigma squared}
  \item{\code{LogLik}}{Log-likelihood for each MCMC iteration}
  \item{\code{LogPosterior}}{Log-Posterior for each MCMC iteration}
  
}
}
\description{
Conducts MCMC to get posterior samples from an inverse Gaussian renewal process.
This function can fit a time-homogeneous model, as well as a time-inhomogeneous 
model.
}
\section{Warning}{

The following must be true:
\describe{
  \item{\code{basis_degree}}{must be an integer larger than or equal to 1}
  \item{\code{internal_knots}}{must lie in the range of \code{boundary_knots}}
  \item{\code{I_mean}}{must be greater than 0}
  \item{\code{I_shape}}{must be greater than 0}
  \item{\code{sigma_mean}}{must be greater than 0}
  \item{\code{sigma_shape}}{must be greater than 0}
  \item{\code{step_size_theta}}{must be greater than 0}
  \item{\code{step_size_FR}}{must be greater than 0}
  \item{\code{delta_proposal_sd}}{must be greater than 0}
  \item{\code{alpha}}{must be greater than 0}
  \item{\code{beta}}{must be greater than 0}
}
}

\examples{
##############################
### Time-Homogeneous Model ###
##############################

## Load sample data
dat <- readRDS(system.file("test-data", "time_homogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100

basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

# Run MCMC chain
results <- Sampler_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB, 
                               MCMC_iters, basis_degree, boundary_knots, internal_knots,
                               Warm_block1 = Warm_block1, Warm_block2 = Warm_block2,
                               time_inhomogeneous = FALSE)


################################
### Time-Inhomogeneous Model ###
################################

## Load sample data
dat <- readRDS(system.file("test-data", "time_inhomogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100
basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

# Run MCMC chain
results <- Sampler_Competition(dat$X_A, dat$X_B, dat$X_AB, dat$n_A, dat$n_B, dat$n_AB, 
                               MCMC_iters, basis_degree, boundary_knots, internal_knots,
                               Warm_block1 = Warm_block1, Warm_block2 = Warm_block2)

}
