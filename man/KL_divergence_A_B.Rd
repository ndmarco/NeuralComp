% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{KL_divergence_A_B}
\alias{KL_divergence_A_B}
\title{Estimate the KL Divergence Between the A and B Point Processes}
\usage{
KL_divergence_A_B(
  Results_A,
  Results_B,
  time_grid,
  basis_degree,
  boundary_knots,
  internal_knots,
  burnin_prop = 0.2,
  time_inhomogeneous = TRUE,
  n_MC_samples = 10L
)
}
\arguments{
\item{Results_A}{List produced from running \code{Sampler_IIGPP} for A trials}

\item{Results_B}{List produced from running \code{Sampler_IIGPP} for B trials}

\item{time_grid}{Vector of time points that create a dense-grid over the trial-time}

\item{basis_degree}{Integer indicating the degree of B-splines (3 for cubic splines)}

\item{boundary_knots}{Vector of two elements specifying the boundary knots}

\item{internal_knots}{Vector containing the desired internal knots of the B-splines}

\item{burnin_prop}{Double containing proportion of MCMC samples that should be discarded due to MCMC burn-in (Note burnin_prop includes warm-up iterations)}

\item{time_inhomogeneous}{Boolean containing whether or not a time-inhomogeneous model should be used (if false then basis_degree, boundary_knots, and internal_knots can take any value of the correct type)}

\item{n_MC_samples}{Integer containing number of samples used to estimate the KL-divergence at each time point}

\item{Results}{List produced from running \code{Sampler_Competition}}
}
\value{
KL_divergence Approximation of the KL Divergence
}
\description{
This function estimates the KL Divergence between the point process 
specified for the A stimulus and B stimulus. This can be useful when determining
whether or not the responses to the two stimuli are sufficiently different. The KL
divergence is approximated using a finite grid of points over the trial-time
}
\section{Warning}{

The following must be true:
\describe{
  \item{\code{basis_degree}}{must be an integer larger than or equal to 1}
  \item{\code{internal_knots}}{must lie in the range of \code{boundary_knots}}
  \item{\code{burnin_prop}}{must be greater than or equal to 0 and less than 1}
  \item{\code{n_sample}}{must be greater than 1}
}
}

\examples{
##############################
### Time-Homogeneous Model ###
##############################

## Load sample data
dat <- readRDS(system.file("test-data", "time_homogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100

basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

## Run MCMC chain for A trials
results_A <- Sampler_IIGPP(dat$X_A, dat$n_A, MCMC_iters, basis_degree, boundary_knots,
                           internal_knots, Warm_block1 = Warm_block1, Warm_block2 = Warm_block2,
                           time_inhomogeneous = FALSE)
                       
## Run MCMC chain for B trials
results_B<- Sampler_IIGPP(dat$X_B, dat$n_B, MCMC_iters, basis_degree, boundary_knots,
                          internal_knots, Warm_block1 = Warm_block1, Warm_block2 = Warm_block2,
                          time_inhomogeneous = FALSE)
                               
## Calculate KL Divergence between distribution of A spike train and distribution of 
## B spike train
time_grid <- seq(0, 1, 0.01)
KL_div <- KL_divergence_A_B(results_A, results_B, time_grid, basis_degree, 
                            boundary_knots, internal_knots, time_inhomogeneous = FALSE)

################################
### Time-Inhomogeneous Model ###
################################

## Load sample data
dat <- readRDS(system.file("test-data", "time_inhomogeneous_sample_dat.RDS", package = "NeuralComp"))

## set parameters
MCMC_iters <- 100
basis_degree <- 3
boundary_knots <- c(0, 1)
internal_knots <- c(0.25, 0.5, 0.75)

## Warm Blocks should be longer, however for the example, they are short
Warm_block1 = 50
Warm_block2 = 50

## Run MCMC chain for A trials
results_A <- Sampler_IIGPP(dat$X_A, dat$n_A, MCMC_iters, basis_degree, boundary_knots,
                           internal_knots, Warm_block1 = Warm_block1, Warm_block2 = Warm_block2)
                       
## Run MCMC chain for B trials
results_B<- Sampler_IIGPP(dat$X_B, dat$n_B, MCMC_iters, basis_degree, boundary_knots,
                          internal_knots, Warm_block1 = Warm_block1, Warm_block2 = Warm_block2)
                               
## Calculate KL Divergence between distribution of A spike train and distribution of 
## B spike train
time_grid <- seq(0, 1, 0.01)
KL_div <- KL_divergence_A_B(results_A, results_B, time_grid, basis_degree, 
                            boundary_knots, internal_knots)
                                              
}
